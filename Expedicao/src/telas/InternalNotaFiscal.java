/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import dao.nfeDAO;
import gets_sets.NFeGetSet;
import gets_sets.TransportadorGetSet;
import gets_sets.VeiculoGetSet;
import java.awt.Dimension;
import java.sql.Date;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wesley Ricardo
 */
public class InternalNotaFiscal extends javax.swing.JInternalFrame {

    /**
     * Creates new form InternalNotaFiscal
     */
    private NFeGetSet nfegs = new NFeGetSet();
    private nfeDAO nfeDAO = new nfeDAO();
    private DefaultTableModel modeloItensNota;
    List<NFeGetSet> NFeGS = null;
    List<TransportadorGetSet> transGS;
    List<VeiculoGetSet> veiGS;

    public InternalNotaFiscal() {
        initComponents();
    }
    
    //public void setSize(){
    //    this.setSize(800,00);
    //}

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void setarCampos() throws SQLException {

        textoidNota.setText(Integer.toString(nfeDAO.numNFe()));
        transGS = nfeDAO.carregaTransporte();

        DefaultComboBoxModel modeloTransportador = new DefaultComboBoxModel();

        for (int i = 0; i < transGS.size(); i++) {

            modeloTransportador.addElement(transGS.get(i).getNome());

        }
        

        comboTransporte.setModel(modeloTransportador);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        textoBaseICMS = new javax.swing.JTextField();
        textoValorICMS = new javax.swing.JTextField();
        textoICMSSub = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        textoidNota = new javax.swing.JTextField();
        textoOBS = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textoValorNota = new javax.swing.JTextField();
        comboTransporte = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        botaoFaturar = new javax.swing.JButton();
        botaoLimpar = new javax.swing.JButton();
        textoNomeCliente = new javax.swing.JTextField();
        botaoPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaNotas = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        comboVeiculo = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        textoBaseICMSST = new javax.swing.JTextField();
        textoData = new javax.swing.JFormattedTextField();
        botaoCancelar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Nota Fiscal Elêtronica");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel14.setText("Base de Cálculo do ICMS-ST:");

        jLabel15.setText("Valor do ICMS:");

        jLabel16.setText("Valor do ICMS Substituição:");

        textoBaseICMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoBaseICMSActionPerformed(evt);
            }
        });
        textoBaseICMS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoBaseICMSKeyTyped(evt);
            }
        });

        textoValorICMS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoValorICMSKeyTyped(evt);
            }
        });

        textoICMSSub.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoICMSSubKeyTyped(evt);
            }
        });

        jLabel10.setText("Código Nota Fiscal:");

        jLabel12.setText("Data Emissão:");

        textoidNota.setEditable(false);
        textoidNota.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textoidNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoidNotaKeyTyped(evt);
            }
        });

        textoOBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoOBSActionPerformed(evt);
            }
        });
        textoOBS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoOBSKeyTyped(evt);
            }
        });

        jLabel17.setText("Observação");

        jLabel11.setText("Valor Nota:");

        textoValorNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoValorNotaKeyTyped(evt);
            }
        });

        comboTransporte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Transportador" }));
        comboTransporte.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboTransportePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboTransporte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                comboTransporteMouseExited(evt);
            }
        });
        comboTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTransporteActionPerformed(evt);
            }
        });

        jLabel18.setText("Transportador");

        jLabel19.setText("Cliente");

        botaoFaturar.setText("Faturar");
        botaoFaturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFaturarActionPerformed(evt);
            }
        });

        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        textoNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoNomeClienteKeyTyped(evt);
            }
        });

        botaoPesquisar.setText("Pesquisar");
        botaoPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarActionPerformed(evt);
            }
        });

        tabelaNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pedido", "Descrição", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaNotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaNotasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaNotas);
        if (tabelaNotas.getColumnModel().getColumnCount() > 0) {
            tabelaNotas.getColumnModel().getColumn(0).setResizable(false);
            tabelaNotas.getColumnModel().getColumn(0).setPreferredWidth(20);
            tabelaNotas.getColumnModel().getColumn(1).setResizable(false);
            tabelaNotas.getColumnModel().getColumn(1).setPreferredWidth(300);
            tabelaNotas.getColumnModel().getColumn(2).setResizable(false);
            tabelaNotas.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        jLabel20.setText("Veículo");

        comboVeiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Veículo" }));
        comboVeiculo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboVeiculoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboVeiculoActionPerformed(evt);
            }
        });

        jLabel13.setText("Base de Cálculo do ICMS:");

        textoBaseICMSST.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoBaseICMSSTKeyTyped(evt);
            }
        });

        try {
            textoData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        textoData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoDataActionPerformed(evt);
            }
        });

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel10)
                        .addGap(10, 10, 10)
                        .addComponent(textoidNota, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159)
                        .addComponent(jLabel14)
                        .addGap(26, 26, 26)
                        .addComponent(textoBaseICMSST, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel12)
                        .addGap(10, 10, 10)
                        .addComponent(textoData, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jLabel13)
                        .addGap(26, 26, 26)
                        .addComponent(textoBaseICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(textoValorNota, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel16)
                        .addGap(26, 26, 26)
                        .addComponent(textoICMSSub, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(textoValorICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(491, 491, 491)
                        .addComponent(jLabel18)
                        .addGap(10, 10, 10)
                        .addComponent(comboTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel19)
                        .addGap(10, 10, 10)
                        .addComponent(textoNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(botaoPesquisar)
                        .addGap(177, 177, 177)
                        .addComponent(jLabel20)
                        .addGap(10, 10, 10)
                        .addComponent(comboVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel17)
                        .addGap(30, 30, 30)
                        .addComponent(textoOBS, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(botaoFaturar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(botaoCancelar)))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoidNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoBaseICMSST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel14))))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel12))
                    .addComponent(textoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(textoBaseICMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel11))
                    .addComponent(textoValorNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel16))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(textoICMSSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel15))
                    .addComponent(textoValorICMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel18))
                    .addComponent(comboTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel19))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(textoNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botaoPesquisar)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(comboVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(textoOBS, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoFaturar)
                    .addComponent(botaoLimpar)
                    .addComponent(botaoCancelar))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textoOBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoOBSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoOBSActionPerformed

    private void comboTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTransporteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTransporteActionPerformed

    private void comboVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboVeiculoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboVeiculoActionPerformed

    private void botaoPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarActionPerformed

        textoData.setText(new SimpleDateFormat("dd/MM/yyyy").format(new Date(System.currentTimeMillis())));
        String nomeCliente = textoNomeCliente.getText();

        try {
            NFeGS = nfeDAO.buscarCliente(nomeCliente);
        } catch (SQLException ex) {
            Logger.getLogger(InternalNotaFiscal.class.getName()).log(Level.SEVERE, null, ex);
        }

        textoNomeCliente.setText(NFeGS.get(0).getNomeCliente());

        modeloItensNota = (DefaultTableModel) tabelaNotas.getModel();

        for (int i = 0; i < NFeGS.size(); i++) {

            modeloItensNota.addRow(new Object[]{NFeGS.get(i).getIdPedido(), NFeGS.get(i).getDescpedido(), NFeGS.get(i).getQuantidade()});
        }

        tabelaNotas.setModel(modeloItensNota);

    }//GEN-LAST:event_botaoPesquisarActionPerformed

    private void textoidNotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoidNotaKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
        int limit = 50;

        if (textoidNota.getText().length() == limit) {

            evt.consume();
        }
    }//GEN-LAST:event_textoidNotaKeyTyped

    private void textoValorNotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoValorNotaKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
        int limit = 50;

        if (textoValorNota.getText().length() == limit) {

            evt.consume();
        }
    }//GEN-LAST:event_textoValorNotaKeyTyped

    private void textoValorICMSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoValorICMSKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
        int limit = 50;

        if (textoValorICMS.getText().length() == limit) {

            evt.consume();
        }
    }//GEN-LAST:event_textoValorICMSKeyTyped

    private void textoBaseICMSSTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoBaseICMSSTKeyTyped

        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
        int limit = 50;

        if (textoBaseICMSST.getText().length() == limit) {

            evt.consume();
        }
    }//GEN-LAST:event_textoBaseICMSSTKeyTyped

    private void textoBaseICMSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoBaseICMSKeyTyped

        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
        int limit = 50;

        if (textoBaseICMS.getText().length() == limit) {

            evt.consume();
        }
    }//GEN-LAST:event_textoBaseICMSKeyTyped

    private void textoICMSSubKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoICMSSubKeyTyped

        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
        int limit = 50;

        if (textoICMSSub.getText().length() == limit) {

            evt.consume();
        }
    }//GEN-LAST:event_textoICMSSubKeyTyped

    private void textoNomeClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoNomeClienteKeyTyped
        String caracteres = "0987654321";
        if (caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
        int limit = 50;

        if (textoNomeCliente.getText().length() == limit) {

            evt.consume();
        }
    }//GEN-LAST:event_textoNomeClienteKeyTyped

    private void textoOBSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoOBSKeyTyped
        int limit = 300;

        if (textoNomeCliente.getText().length() == limit) {

            evt.consume();
        }    }//GEN-LAST:event_textoOBSKeyTyped

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        LimparCampos();
    }//GEN-LAST:event_formInternalFrameClosed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        LimparCampos();
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        this.dispose();
        LimparCampos();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void botaoFaturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFaturarActionPerformed

        //setarCampos();
        int linha = tabelaNotas.getSelectedRow();

        textoValorNota.setText(NFeGS.get(linha).getValor());

        nfegs.setNomeCliente(textoNomeCliente.getText());
        nfegs.setIdCliente(NFeGS.get(linha).getIdCliente());
        nfegs.setIdPedido(NFeGS.get(linha).getIdPedido());
        nfegs.setIdPedidoItens(NFeGS.get(linha).getIdPedidoItens());
        nfegs.setBaseicms_st(Float.parseFloat(textoBaseICMSST.getText()));
        nfegs.setBaseicms(Float.parseFloat(textoBaseICMS.getText()));
        nfegs.setIdNota(Integer.parseInt(textoidNota.getText()));
        nfegs.setValoricmssub(Float.parseFloat(textoICMSSub.getText()));
        nfegs.setValoricms(Float.parseFloat(textoValorICMS.getText()));
        nfegs.setValor(textoValorNota.getText());
        nfegs.setData(textoData.getText());
        nfegs.setObs(textoOBS.getText());

        for (int i = 0; i < transGS.size(); i++) {

            if (transGS.get(i).getNome() == comboTransporte.getSelectedItem()) {
                nfegs.setIdTransportador(Integer.parseInt(transGS.get(i).getIdTransportador().toString()));
            }
        }
        
        for (int i = 0; i < veiGS.size(); i++) {

            if (veiGS.get(i).getNome() == comboVeiculo.getSelectedItem()) {
                nfegs.setIdVeiculo(Integer.parseInt(veiGS.get(i).getIdVeiculo().toString()));
            }

        }

        nfeDAO.Insert(nfegs);
        modeloItensNota.setNumRows(0);
        LimparCampos();

    }//GEN-LAST:event_botaoFaturarActionPerformed

    private void textoDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoDataActionPerformed

    private void tabelaNotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaNotasMouseClicked

        int linha = tabelaNotas.getSelectedRow();
        int pedido = Integer.parseInt(tabelaNotas.getValueAt(linha, 0).toString());

        textoValorNota.setText(NFeGS.get(linha).getValor());
        float valor = Float.parseFloat(textoValorNota.getText());
        textoBaseICMS.setText(valor + "");
        float valorICMS = valor * 17 / 100;

        textoValorICMS.setText(valorICMS + "");
        textoBaseICMSST.setText(0 + "");
        textoICMSSub.setText(0 + "");


    }//GEN-LAST:event_tabelaNotasMouseClicked

    private void comboTransporteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboTransporteMouseExited


    }//GEN-LAST:event_comboTransporteMouseExited

    private void comboTransportePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboTransportePopupMenuWillBecomeInvisible

        //DefaultComboBoxModel modeloVeiculos = new DefaultComboBoxModel();
        /*for (int i = 0; i < transGS.size(); i++) {

            if (transGS.get(i).getNome() == comboTransporte.getSelectedItem()) {
                textoIdTransportador.setText(transGS.get(i).getIdTransportador().toString());
            }

        }*/

        try {
            veiGS = nfeDAO.carregaVeiculo(comboTransporte.getSelectedItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(InternalNotaFiscal.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultComboBoxModel modeloVeiculo = new DefaultComboBoxModel();

        for (int i = 0; i < veiGS.size(); i++) {

            modeloVeiculo.addElement(veiGS.get(i).getNome());

        }

        comboVeiculo.setModel(modeloVeiculo);
    }//GEN-LAST:event_comboTransportePopupMenuWillBecomeInvisible

    private void comboVeiculoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboVeiculoPopupMenuWillBecomeInvisible
       
        /*for (int i = 0; i < veiGS.size(); i++) {

            if (veiGS.get(i).getNome() == comboVeiculo.getSelectedItem()) {
                textoIdVeiculo.setText(veiGS.get(i).getIdVeiculo().toString());
            }

        }*/
        
        
    }//GEN-LAST:event_comboVeiculoPopupMenuWillBecomeInvisible

    private void textoBaseICMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoBaseICMSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoBaseICMSActionPerformed

    public void LimparCampos() {

        textoidNota.setText("");
        textoBaseICMS.setText("");
        textoBaseICMSST.setText("");
        textoICMSSub.setText("");
        textoValorICMS.setText("");
        textoValorNota.setText("");
        textoOBS.setText("");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoFaturar;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoPesquisar;
    private javax.swing.JComboBox<String> comboTransporte;
    private javax.swing.JComboBox<String> comboVeiculo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaNotas;
    private javax.swing.JTextField textoBaseICMS;
    private javax.swing.JTextField textoBaseICMSST;
    private javax.swing.JFormattedTextField textoData;
    private javax.swing.JTextField textoICMSSub;
    private javax.swing.JTextField textoNomeCliente;
    private javax.swing.JTextField textoOBS;
    private javax.swing.JTextField textoValorICMS;
    private javax.swing.JTextField textoValorNota;
    private javax.swing.JTextField textoidNota;
    // End of variables declaration//GEN-END:variables
}
